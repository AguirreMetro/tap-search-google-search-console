<apex:page id="TapSearchResults"
           applyHtmlTag="false"
           applyBodyTag="false"
           cache="false"
           docType="HTML-5.0"
           showChat="false"
           showHeader="false"
           standardStylesheets="false"
           >
    <apex:composition template="TAPWrapper">
        <apex:define name="title_text">TAP Search Results</apex:define>

        <apex:define name="scripts"><!-- Limits 3 page search on mobile -->
            <script>
                var SEARCH_FORM_SELECTOR = 'form.gsc-search-box, form.gsc-search-box-tools';
                var searchRedirectInitialized = false;
                var searchFormObserver = null;
                var searchFormIntervalId = null;

                function getHashParams() {
                    var hash = window.location.hash.substring(1);
                    var hashParams = {};
                    var regex = /([^&;=]+)=?([^&;]*)/g;
                    var match;

                    while ((match = regex.exec(hash))) {
                        hashParams[decodeURIComponent(match[1])] = decodeURIComponent(match[2]);
                    }

                    return hashParams;
                }

                function applyStyles() {
                    setTimeout(function() {
                        var element = document.querySelector('.gsc-cursor-container-next');

                        if (element) {
                            element.style.opacity = '0';
                            element.style.pointerEvents = 'none';
                        }
                    }, 500);
                }

                function normalizeSearchTerm(term) {
                    if (typeof term !== 'string') {
                        return '';
                    }

                    return term.replace(/^\s+|\s+$/g, '');
                }

                function getQueryParameterValue(paramName) {
                    var query = window.location.search;

                    if (!query) {
                        return null;
                    }

                    var queryWithoutQuestionMark = query.charAt(0) === '?' ? query.substring(1) : query;

                    if (!queryWithoutQuestionMark) {
                        return null;
                    }

                    var params = queryWithoutQuestionMark.split('&');
                    var targetName = paramName.toLowerCase();

                    for (var i = 0; i < params.length; i++) {
                        var param = params[i];

                        if (!param) {
                            continue;
                        }

                        var separatorIndex = param.indexOf('=');
                        var rawName = separatorIndex > -1 ? param.slice(0, separatorIndex) : param;

                        if (rawName.toLowerCase() !== targetName) {
                            continue;
                        }

                        var rawValue = separatorIndex > -1 ? param.slice(separatorIndex + 1) : '';
                        rawValue = rawValue.replace(/\+/g, ' ');

                        try {
                            return decodeURIComponent(rawValue);
                        } catch (error) {
                            return rawValue;
                        }
                    }

                    return null;
                }

                function buildUrlWithUpdatedQuery(searchTerm) {
                    var sanitizedTerm = normalizeSearchTerm(searchTerm);

                    if (!sanitizedTerm) {
                        return null;
                    }

                    var existingValue = getQueryParameterValue('q');
                    var normalizedExistingValue = normalizeSearchTerm(existingValue);

                    if (existingValue !== null && normalizedExistingValue === sanitizedTerm) {
                        return null;
                    }

                    var query = window.location.search ? window.location.search.substring(1) : '';
                    var params = query ? query.split('&') : [];
                    var foundTarget = false;
                    var newParams = [];

                    for (var i = 0; i < params.length; i++) {
                        var param = params[i];

                        if (!param) {
                            continue;
                        }

                        var separatorIndex = param.indexOf('=');
                        var rawName = separatorIndex > -1 ? param.slice(0, separatorIndex) : param;

                        if (rawName.toLowerCase() === 'q') {
                            if (!foundTarget) {
                                newParams.push('q=' + encodeURIComponent(sanitizedTerm));
                                foundTarget = true;
                            }
                        } else {
                            newParams.push(param);
                        }
                    }

                    if (!foundTarget) {
                        newParams.push('q=' + encodeURIComponent(sanitizedTerm));
                    }

                    var baseUrl = window.location.protocol + '//' + window.location.host + window.location.pathname;
                    var newQueryString = newParams.join('&');

                    return newQueryString ? baseUrl + '?' + newQueryString : baseUrl;
                }

                function redirectToSearchTerm(searchTerm) {
                    var updatedUrl = buildUrlWithUpdatedQuery(searchTerm);

                    if (!updatedUrl) {
                        return false;
                    }

                    window.location.href = updatedUrl;
                    return true;
                }

                function syncQueryParamWithHash(hashParams) {
                    if (!hashParams) {
                        return;
                    }

                    var hashSearchTerm = hashParams['gsc.q'];
                    var normalizedTerm = normalizeSearchTerm(hashSearchTerm);

                    if (!normalizedTerm) {
                        return;
                    }

                    redirectToSearchTerm(normalizedTerm);
                }

                function attachSearchHandlerToForms() {
                    var forms = document.querySelectorAll(SEARCH_FORM_SELECTOR);

                    for (var i = 0; i < forms.length; i++) {
                        var form = forms[i];

                        if (form.getAttribute('data-q-redirect-bound') === 'true') {
                            continue;
                        }

                        form.setAttribute('data-q-redirect-bound', 'true');

                        form.addEventListener('submit', function(event) {
                            var input = event.currentTarget.querySelector('input.gsc-input');
                            var rawTerm = input && typeof input.value === 'string' ? input.value : '';
                            var normalizedTerm = normalizeSearchTerm(rawTerm);

                            if (!normalizedTerm) {
                                return;
                            }

                            var redirected = redirectToSearchTerm(normalizedTerm);

                            if (redirected) {
                                event.preventDefault();
                            }
                        });
                    }
                }

                function initializeSearchRedirect() {
                    if (searchRedirectInitialized) {
                        return;
                    }

                    searchRedirectInitialized = true;
                    attachSearchHandlerToForms();

                    if (typeof MutationObserver === 'function' && document.body) {
                        searchFormObserver = new MutationObserver(function() {
                            attachSearchHandlerToForms();
                        });

                        searchFormObserver.observe(document.body, { childList: true, subtree: true });
                    } else if (!searchFormIntervalId) {
                        searchFormIntervalId = window.setInterval(attachSearchHandlerToForms, 1000);
                    }
                }

                function handleHashChange() {
                    var hashParams = getHashParams();

                    if (hashParams['gsc.page'] === '3') {
                        applyStyles();
                    }

                    if (hashParams['gsc.page'] === '2') {
                        // Placeholder for additional logic
                    }

                    syncQueryParamWithHash(hashParams);
                }

                function delegatedClickHandler(event) {
                    if (event.target.matches('.gsc-cursor-container-next, .gsc-cursor-container-next *, .gsc-cursor-container-previous, .gsc-cursor-container-previous *')) {
                        handleHashChange();
                    }
                }

                function setupEventDelegation() {
                    document.body.addEventListener('click', delegatedClickHandler);
                }

                if (document.readyState === 'loading') {
                    document.addEventListener('DOMContentLoaded', initializeSearchRedirect);
                } else {
                    initializeSearchRedirect();
                }

                window.addEventListener('hashchange', handleHashChange, false);

                window.addEventListener('load', function() {
                    setTimeout(function() {
                        handleHashChange();
                        setupEventDelegation();
                    }, 1000);
                });
            </script>
        </apex:define>

        <apex:define name="styles">
            <style>
                .search-form-input > div > form > table > tbody > tr > td.gsc-input {
                    padding-right: 0 !important;
                }
                
                .search-form-input > div > form > table > tbody > tr > .gsc-search-button > .gsc-search-button-v2 {
                    margin-left: 0;
                }
                
                .search-form-input > div > form > table > tbody > tr > td.gsc-input {
                    padding-right: 0 !important;
                }
                
                .gsc-input-box {
                    padding: 0 !important;
                        border-top-left-radius: 3px !important;
                        border-bottom-left-radius: 3px !important;
                }
                
                .gsc-search-box {
                    max-width: 600px;
                }
                
                .search-form-input > div > form > table > tbody > tr > .gsc-search-button > .gsc-search-button-v2 {
                    margin-left: 0;
                    padding: 10px;
                    border-left: none;
                    border-top-left-radius: 0;
                    border-bottom-left-radius: 0;
                    border-bottom-right-radius: 3px;
                    border-top-right-radius: 3px;
                }
                
                
                
                    .search-form-input > div > form > table > tbody > tr > .gsc-input .gsc-input-box > table > tbody > tr > td {
                        padding: 2px 9px 2px 9px !important;
                    }
                    
                .gcsc-more-maybe-branding-root,
                .gcsc-find-more-on-google-root,
                .gcsc-branding {
                    display: none !important;
                }
                
                .gsc-search-button-v2 svg {
                    height: auto;
                    width: 13px !important;
                }
                
                .gsc-input-box > table > tbody > tr > td > input {
                    background: #ffffff !important;
                    padding: 3px !important
                }
                
                .gssb_a img {
                    display: none;
                }

                .gsc-cursor-page[aria-label="Page 4"],
                .gsc-cursor-page[aria-label="Page 5"],
                .gsc-cursor-page[aria-label="Page 6"],
                .gsc-cursor-page[aria-label="Page 7"],
                .gsc-cursor-page[aria-label="Page 8"],
                .gsc-cursor-page[aria-label="Page 9"],
                .gsc-cursor-page[aria-label="Page 10"] {
                    display: none !important;
                }
                
                .gs-webResult div.gs-visibleUrl-breadcrumb > span:first-child {
                    display: none;
                }
                
                table.gsc-above-wrapper-area-container {
                    display: none;
                }
                
                .gsc-url-top {
                    display: none !important;
                }
                
                .gsc-webResult.gsc-result {
                    padding: 15px 0;
                 }
                
            </style>
        </apex:define>
        <apex:define name="body">
        <apex:form >
            <div class="page-wrapper">
                <div id="viewport" class="container">
                    <div class="row" style="margin-bottom: 0;">

                        <div class="col-xs-12 col-sm-12">

                            <div class="gsc-results-wrap search-results-page">
                                 <h1>Search Results</h1>
                                 <script async="true" src="https://cse.google.com/cse.js?cx=10ca34c4261d749f0"></script>
                                   <div class="search-form-input">
                                       <div class="gcse-searchbox"></div>
                                   </div>
                                   
                                <div class="gcse-searchresults"></div>

                            </div>
                            
                        </div>
                        
                    </div>
                </div> <!-- /.container -->
            </div>
            </apex:form>
        </apex:define>
    </apex:composition>
</apex:page>
